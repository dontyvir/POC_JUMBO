<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap 
   PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
   "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap >
	<resultMap id="resultPrice" class="java.util.HashMap">
		<result property="key" column="row_id"/>
		<result property="valor" column="col2"/>
		<result property="estado" column="estado"/>
	</resultMap>
	<select id="getPrice" resultMap="resultPrice">
	<![CDATA[
		SELECT PRC.PRE_PRO_ID||'-'||PRC.PRE_LOC_ID AS row_id,
		       (PRC.PRE_PRO_ID||'|'||
		       PRC.PRE_LOC_ID||'|@'||
               (CASE WHEN PRD.PRO_PARTICIONABLE='S' AND PRD.PRO_PARTICION != 0 THEN 
                        CAST(ROUND(PRC.PRE_VALOR/PRD.PRO_PARTICION) AS INT)
                     ELSE
                        CAST(PRC.PRE_VALOR AS INT)
               END) ||'@'||
               (CASE WHEN PRD.PRO_PARTICIONABLE='S' AND PRD.PRO_PARTICION != 0 THEN 
                        '1/'||PRD.PRO_PARTICION||' ' 
                     ELSE 
                        '' 
               END)||
		       DECODE(PRD.PRO_TIPRE,
		               'ST', 'Und',
		               'KG', 'Kg',
		               'CS', 'Und',
		               'L',  'Und',
		               'M',  'Und',
		               'M2', 'Und',
		               'PAK','Und',
		               'BAG','Und',
                       ' ')||'|'||
		       CAST(PRC.PRE_VALOR AS INT)||'|@'||
		       (CAST(DECODE(PRD.PRO_UNIDAD_MEDIDA,
		               0,0,
		               ROUND(MED.UNI_CANTIDAD*PRC.PRE_VALOR/PRD.PRO_UNIDAD_MEDIDA))
		        AS INT)||'@x '||MED.UNI_DESC||' ')) AS col2,
		        'N' AS ESTADO
          FROM fodba.FO_PRECIOS_LOCALES PRC
          JOIN fodba.FO_PRODUCTOS PRD ON  PRC.PRE_PRO_ID = PRD.PRO_ID                                        
          						      AND PRD.PRO_ESTADO = 'A'
                                      AND PRC.PRE_ESTADO = 'A'
                                      AND PRC.PRE_TIENESTOCK = 1         
          JOIN fodba.FO_UNIDADES_MEDIDA MED ON PRD.PRO_UNI_ID = MED.UNI_ID
    ]]>
	</select>
	<select id="getPriceNov" resultMap="resultPrice">
	<![CDATA[	
	WITH DATOS
	(
	    ID_DAT_PRECIO,
	    COL2
	)
	AS
	(
		SELECT PRC.PRE_PRO_ID||'-'||PRC.PRE_LOC_ID AS row_id,
		       (PRC.PRE_PRO_ID||'|'||
		       PRC.PRE_LOC_ID||'|@'||
               (CASE WHEN PRD.PRO_PARTICIONABLE='S' AND PRD.PRO_PARTICION != 0 THEN 
                        CAST(ROUND(PRC.PRE_VALOR/PRD.PRO_PARTICION) AS INT)
                     ELSE
                        CAST(PRC.PRE_VALOR AS INT)
               END) ||'@'||
               (CASE WHEN PRD.PRO_PARTICIONABLE='S' AND PRD.PRO_PARTICION != 0 THEN 
                        '1/'||PRD.PRO_PARTICION||' ' 
                     ELSE 
                        '' 
               END)||
		       DECODE(PRD.PRO_TIPRE,
		               'ST', 'Und',
		               'KG', 'Kg',
		               'CS', 'Und',
		               'L',  'Und',
		               'M',  'Und',
		               'M2', 'Und',
		               'PAK','Und',
		               'BAG','Und',
                       ' ')||'|'||
		       CAST(PRC.PRE_VALOR AS INT)||'|@'||
		       (CAST(DECODE(PRD.PRO_UNIDAD_MEDIDA,
		               0,0,
		               ROUND(MED.UNI_CANTIDAD*PRC.PRE_VALOR/PRD.PRO_UNIDAD_MEDIDA))
		        AS INT)||'@x '||MED.UNI_DESC||' ')) AS col2
          FROM fodba.FO_PRECIOS_LOCALES PRC
          JOIN fodba.FO_PRODUCTOS PRD ON  PRC.PRE_PRO_ID = PRD.PRO_ID                                        
          						      AND PRD.PRO_ESTADO = 'A'
                                      AND PRC.PRE_ESTADO = 'A'
                                      AND PRC.PRE_TIENESTOCK = 1         
          JOIN fodba.FO_UNIDADES_MEDIDA MED ON PRD.PRO_UNI_ID = MED.UNI_ID
    )
	 SELECT PRE.ROW_ID,
	        PRE.COL2,
	        PRE.ESTADO
	  FROM (
	    /* MODIFICADOS */
	    SELECT DATOS.ID_DAT_PRECIO AS ROW_ID, DATOS.COL2, 'M' AS ESTADO
	      FROM DATOS
          JOIN bodba.BO_INT_PRECIO AS DIS
	        ON DIS.ID_INT_PRECIO = DATOS.ID_DAT_PRECIO
	       AND DIS.INT_DATA != DATOS.COL2 
	     UNION ALL
	     
	     /* NUEVOS */                    
        SELECT D.ID_DAT_PRECIO AS ROW_ID, D.COL2, 'N' AS ESTADO
	    FROM DATOS D LEFT JOIN bodba.BO_INT_PRECIO AS PRC on D.ID_DAT_PRECIO=PRC.ID_INT_PRECIO WHERE PRC.ID_INT_PRECIO is null                    
         
	     UNION ALL
	     /* ELIMINADOS */
	    SELECT DIS.ID_INT_PRECIO AS ROW_ID, DIS.INT_DATA AS COL2, 'E' AS ESTADO
	      FROM bodba.BO_INT_PRECIO AS DIS
	     WHERE NOT EXISTS
	           (SELECT 1
	              FROM DATOS AS DAT
                  JOIN bodba.BO_INT_PRECIO AS PRC
                    ON DAT.ID_DAT_PRECIO = PRC.ID_INT_PRECIO)
       UNION ALL
	     /* ELIMINADOS cuando no viene en la estructura datos*/	    	
		    SELECT DIS.ID_INT_PRECIO AS ROW_ID, DIS.INT_DATA AS COL2, 'E' AS ESTADO
		    FROM bodba.BO_INT_PRECIO AS DIS LEFT JOIN DATOS D on DIS.ID_INT_PRECIO = D.ID_DAT_PRECIO WHERE D.ID_DAT_PRECIO is null
		    
	     ) AS PRE
    ]]>
	</select>
</sqlMap>